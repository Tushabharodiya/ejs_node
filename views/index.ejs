<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">


    <style>
        .student_list .card label {
            margin: 5px 0;
            display: block;
        }

        .student_list table {
            vertical-align: middle;
        }

        .student_list .card input {
            margin: 5px 0;
        }

        button {
            padding: 8px 20px;
            background-color: transparent;
            border: 1px solid black;
            border-radius: 10px;
        }
    </style>
</head>

<body>

    <div class="student_list mt-5">
        <div class="container">
            <div class="row">
                <div class="col-lg-3">
                    <div class="card">
                        <div class="card-body">
                            <h4>student deltails</h4>
                            <div class="card-data">
                                <input type="hidden" id="student_id">
                                <label>name : <input type="text" class="form-control" id="name"></label>
                                <label>father name : <input type="text" class="form-control" id="father_name"></label>
                                <label>age : <input type="number" class="form-control" id="age"></label>
                                <label>standred : <input type="number" class="form-control" id="std"></label>
                                <label>mobile number : <input type="number" class="form-control"
                                        id="mobile_number"></label>
                                <button onclick="addData()" class="mt-3 w-100">add</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-9">
                    <table class="table table-bordered text-center">
                        <thead>
                            <tr>
                                <th>name</th>
                                <th>father_name</th>
                                <th>age</th>
                                <th>standred</th>
                                <th>mobile number</th>
                                <th>delete</th>
                                <th>update</th>
                            </tr>
                        </thead>
                        <tbody id="tbody"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>



    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    <script>

        // get data
        let loadData = async () => {
            let tbody = document.getElementById("tbody");
            let res = await fetch("http://localhost:3001/v1/student/get")
            let result = await res.json()
            let data = result.student;
            console.log(data);

            data.map((val, ind) => {
                let tr = document.createElement("tr")
                tr.innerHTML = `
                <td>${val.name}</td>
                                <td>${val.father_name}</td>
                                <td>${val.age}</td>
                                <td>${val.std}</td>
                                <td>${val.mobile_number}</td>
                                <td><button onclick="deletData('${val._id}')">delete</button></td>
                                <td><button onclick="viewData('${val._id}')">update</button></td>`
                tbody.appendChild(tr)
            })

        }
        loadData()

        let addData = async () => {
            let studentId = document.getElementById("student_id").value;
            let data = {
                name: document.getElementById("name").value,
                father_name: document.getElementById("father_name").value,
                age: document.getElementById("age").value,
                std: document.getElementById("std").value,
                mobile_number: document.getElementById("mobile_number").value,
            }
            console.log(data);

            try {
                let url = studentId
                    ? `http://localhost:3001/v1/student/update/${studentId}`
                    : "http://localhost:3001/v1/student/add";
                let method = studentId ? "PUT" : "POST";

                const res = await fetch(url, {
                    method: method,
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(data),
                });
                const result = await res.json();
                console.log(result);

                // Reset the form and hidden input
                document.getElementById("student_id").value = "";
                document.getElementById("name").value = "";
                document.getElementById("father_name").value = "";
                document.getElementById("age").value = "";
                document.getElementById("std").value = "";
                document.getElementById("mobile_number").value = "";

                // Reload the data to reflect the changes
                location.reload();
            } catch (error) {
                console.error("There was an error:", error);
            }

        }

        // delete data
        let deletData = async (id) => {
            console.log(id);

            let res = await fetch(`http://localhost:3001/v1/student/delete/${id}`, {
                method: "delete"
            })
            let result = await res.json()
            console.log(result);
            location.reload()
        }

        // viewData
        let viewData = async (id) => {
            let res = await fetch(`http://localhost:3001/v1/student/get/${id}`);
            let result = await res.json();
            let student = result.student;
            console.log(student);

            document.getElementById("student_id").value = student._id;
            document.getElementById("name").value = student.name;
            document.getElementById("father_name").value = student.father_name;
            document.getElementById("age").value = student.age
            document.getElementById("std").value = student.std;
            document.getElementById("mobile_number").value = student.mobile_number

        }





    </script>
</body>

</html>